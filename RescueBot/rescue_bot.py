import telebot, bot_db
from telebot import types


bot = telebot.TeleBot('XXX')
operator_id = 'XXX'
rescue_number = 112


@bot.message_handler(commands=['start'])
def start(message):
    mess = f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>{message.from_user.first_name} {message.from_user.last_name}</b> üëã'
    bot.send_message(message.chat.id, mess, parse_mode='html')
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=2)
    fire = types.KeyboardButton('–ü–æ–∂–∞—Ä üî•')
    crash = types.KeyboardButton('–î–¢–ü üöó')
    collapse = types.KeyboardButton('–û–±—Ä—É—à–µ–Ω–∏–µ üèöÔ∏è')
    offence = types.KeyboardButton('–ü—Ä–∞–≤–æ–Ω–∞—Ä—É—à–µ–Ω–∏–µ ‚öñ')
    ambulance = types.KeyboardButton('–ù—É–∂–Ω–∞ –º–µ–¥ –ø–æ–º–æ—â—å ü©∫')
    rescue = types.KeyboardButton('–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å–ø–∞—Å–∞—Ç–µ–ª–µ–π üöÅ')
    other = types.KeyboardButton('–î—Ä—É–≥–æ–µ üîç')
    markup.add(fire, crash, collapse, offence, ambulance, rescue, other)
    mess_2 = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –º–µ–Ω—é —Ç–µ–º—É –í–∞—à–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—èüëá \n' \
                '‚ö†Ô∏è–û–±—Ä–∞—â–∞–µ–º –í–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ –æ –Ω–µ–¥–æ–ø—É—â–µ–Ω–∏–∏ –ø–æ–¥–∞—á–∏ –∑–∞–≤–µ–¥–æ–º–æ –ª–æ–∂–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π‚õî'
    bot.send_message(message.chat.id, mess_2, reply_markup=markup)
    add_db(message.from_user.id, message.text)


@bot.message_handler(content_types=['text'])
def get_user_message(message):
    if message.text in ['–ü–æ–∂–∞—Ä üî•', '–î–¢–ü üöó', '–û–±—Ä—É—à–µ–Ω–∏–µ üèöÔ∏è', '–ü—Ä–∞–≤–æ–Ω–∞—Ä—É—à–µ–Ω–∏–µ ‚öñ', '–ù—É–∂–Ω–∞ –º–µ–¥ –ø–æ–º–æ—â—å ü©∫', '–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å–ø–∞—Å–∞—Ç–µ–ª–µ–π üöÅ']:
        mess = '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –Ω–∞ –∫–∞—Ä—Ç–µ üìç' \
               ' –∏–ª–∏ —Ç–µ–∫—Ç–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∞–¥—Ä–µ—Å –º–µ—Å—Ç–∞ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è (–Ω–∞—Å–µ–ª—ë–Ω–Ω—ã–π –ø—É–Ω–∫—Ç, —É–ª–∏—Ü–∞, –Ω–æ–º–µ—Ä –¥–æ–º–∞, –∫–æ—Ä–ø—É—Å–∞ –∏ —Ç.–¥.) ' \
               '–∏–ª–∏ –∏–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è –æ –º–µ—Å—Ç–µ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è üìù'
        bot.send_message(message.chat.id, mess)
        mess_2 = f'C–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç [{message.from_user.id}](tg://user?id={message.from_user.id}): {message.text}'
        bot.send_message(operator_id, mess_2, parse_mode='Markdown')
        add_db(message.from_user.id, message.text)
    elif message.text in ['–î—Ä—É–≥–æ–µ üîç']:
        mess = '–ó–¥–µ—Å—å —Å–¥–µ–ª–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π: —ç–≤–∞–∫—É–∞—Ç–æ—Ä, —Å–æ–≤–µ—Ç'
        bot.send_message(message.chat.id, mess)
        add_db(message.from_user.id, message.text)
    elif len(message.text) > 5:
        mess = '–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ‚è±Ô∏è \n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–ª–∏—á–∏–∏ ' \
                '–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ª—é–¥—è–º –∏ –∏–Ω—ã–µ –∏–º–µ—é—â–∏–µ—Å—è —Å–≤–µ–¥–µ–Ω–∏—è üìù' \
                '–¢–∞–∫–∂–µ, –ø—Ä–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ñ–æ—Ç–æ –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ —Å –º–µ—Å—Ç–∞ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è üì∏üìπ' \
                '\n–≠—Ç–æ –æ—á–µ–Ω—å –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º! üôè'
        bot.send_message(message.chat.id, mess)
        mess_2 = f'C–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç [{message.from_user.id}](tg://user?id={message.from_user.id}): {message.text}'
        bot.send_message(operator_id, mess_2, parse_mode='Markdown')
        add_db(message.from_user.id, message.text)
    else:
        bot.send_message(message.chat.id, '‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.')
        add_db(message.from_user.id, message.text)


@bot.message_handler(content_types=['location'])
def get_user_location(message):
    bot.send_message(message.chat.id, '–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ‚è±Ô∏è \n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–ª–∏—á–∏–∏ ' \
                                      '–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ª—é–¥—è–º –∏ –∏–Ω—ã–µ –∏–º–µ—é—â–∏–µ—Å—è —Å–≤–µ–¥–µ–Ω–∏—è üìù ' \
                                      '–¢–∞–∫–∂–µ, –ø—Ä–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ñ–æ—Ç–æ –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ —Å –º–µ—Å—Ç–∞ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è üì∏üìπ' \
                                      '\n–≠—Ç–æ –æ—á–µ–Ω—å –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º! üôè')
    # mess_2 = f'C–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç "{message.from_user.id}":'
    mess_2 = f'C–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç [{message.from_user.id}](tg://user?id={message.from_user.id}): '
    bot.send_message(operator_id, mess_2, parse_mode='Markdown')
    bot.send_location(operator_id, message.location.latitude, message.location.longitude)
    add_db(message.from_user.id, [message.location.latitude, message.location.longitude])


@bot.message_handler(content_types=['photo'])
def get_user_photo(message):
    bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é üëç –ò–¥—ë—Ç –µ—ë –æ–±—Ä–∞–±–æ—Ç–∫–∞ ‚è±Ô∏è \n' \
                                          '–ï—Å–ª–∏ —É –í–∞—Å –ø–æ—è–≤—è—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è –ø—Ä–æ—Å–∏–º —Å–æ–æ–±—â–∏—Ç—å –∏—Ö —Ç–∞–∫–∂–µ –∑–¥–µ—Å—å ' \
                                          f'–∏–ª–∏ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ "{rescue_number}"  ‚òéÔ∏è\n ' \
                                          '\n–≠—Ç–æ –æ—á–µ–Ω—å –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º! üôè')
    mess_2 = f'C–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç [{message.from_user.id}](tg://user?id={message.from_user.id}): '
    bot.send_message(operator_id, mess_2, parse_mode='Markdown')
    bot.send_photo(operator_id, message.photo[1].file_id)
    add_db(message.from_user.id, message.photo[1].file_id)


def add_db(info_1, info_2):
    bot_db.add(info_1, info_2)



bot.polling(none_stop=True)